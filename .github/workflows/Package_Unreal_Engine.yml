name: Package Unreal Engine Project

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'Windows/**' # windows 폴더 내 모든 파일 제외
      - 'Build/**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    name: Package Unreal Engine Game
    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Unreal Engine 프로젝트 패키징
      - name: Package Project
        env: 
          UE_PATH: 'D:\Epic Games\UE_5.4' # Path to your Unreal Engine installation
          PROJECT_PATH: 'D:\External Project\Building Unreal CICD Engine (2024.11.18)\test\CICDExample\CICDExample.uproject' # Path to your Unreal project file
          OUTPUT_PATH: 'D:\External Project\Building Unreal CICD Engine (2024.11.18)\test\CICDExample' # Path to where you want to store the packaged game
        run: |
          # Try to run empty UAT to check for correct path
          & $env:UE_PATH\Engine\Build\BatchFiles\RunUAT.bat BuildCookRun -project="$env:PROJECT_PATH" -noP4 -platform=Win64 -clientconfig=Development -serverconfig=Development -cook -allmaps -build -stage -pak -archive -archivedirectory="$env:OUTPUT_PATH"
        
      # 3. Windows 폴더 압축
      - name: Compress Windows Folder
        run: |
          cd "D:\External Project\Building Unreal CICD Engine (2024.11.18)\test\CICDExample"
          if (Test-Path "Windows.zip") { Remove-Item "Windows.zip" } # 기존 zip 파일 삭제
          Compress-Archive -Path Windows -DestinationPath Windows.zip # Windows 폴더 압축

      # 4. windows 폴더를 GitHub에 커밋 및 푸시
      # - name: Commit and Push Packaged Files to GitHub
      #   run: |
      #     # windows 폴더 복사 및 Git 작업
      #     cd "D:\External Project\Building Unreal CICD Engine (2024.11.18)\test\CICDExample"
      #     git config --global user.name "CheongYa"
      #     git config --global user.email "chch1234569@naver.com"
      #     git add Windows.zip
      #     git commit -m "Add packaged Windows folder"
      #     git push origin main

      # 4. Get Access Token
      - name: Get Access Token
        id: get-token
        run: |
          RESPONSE=$(curl -X POST \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "client_id=${{ secrets.ONEDRIVE_CLIENT_ID }}" \
            -d "scope=https://graph.microsoft.com/.default" \
            -d "client_secret=${{ secrets.ONEDRIVE_CLIENT_SECRET }}" \
            -d "grant_type=client_credentials" \
            "https://login.microsoftonline.com/${{ secrets.ONEDRIVE_TENANT_ID }}/oauth2/v2.0/token")
          echo "::set-output name=token::$(echo $RESPONSE | jq -r '.access_token')"

      # 5. Upload to OneDrive
      - name: Upload to OneDrive
        env:
          ACCESS_TOKEN: ${{ steps.get-token.outputs.token }}
        run: |
          curl -X PUT \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"D:\External Project\Building Unreal CICD Engine (2024.11.18)\test\CICDExample\Windows.zip" \
            "https://graph.microsoft.com/v1.0/me/drive/root:/ProjectH_CICD_Test/Windows.zip:/content"
